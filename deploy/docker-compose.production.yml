version: '3.8'

services:
  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: openpenpal-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - api-gateway
    restart: unless-stopped
    networks:
      - openpenpal-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: openpenpal-frontend
    environment:
      - NODE_ENV=production
    expose:
      - "3000"
    restart: unless-stopped
    networks:
      - openpenpal-network

  # API网关
  api-gateway:
    build:
      context: ./services/gateway
      dockerfile: Dockerfile
    container_name: openpenpal-gateway
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/openpenpal
      - REDIS_URL=redis://redis:6379
    expose:
      - "8000"
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    networks:
      - openpenpal-network

  # 数据库
  postgres:
    image: postgres:15-alpine
    container_name: openpenpal-db
    environment:
      - POSTGRES_DB=openpenpal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - openpenpal-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: openpenpal-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - openpenpal-network

  # 监控 - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: openpenpal-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - openpenpal-network

  # 监控 - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: openpenpal-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - openpenpal-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  openpenpal-network:
    driver: bridge
