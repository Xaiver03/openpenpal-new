# Virtual host configuration for OpenPenPal project

# Main frontend server (User-facing application)
server {
    listen 80;
    listen [::]:80;
    server_name localhost openpenpal.local;

    # SSL/TLS configuration (ready for HTTPS)
    # Uncomment the following lines when SSL certificates are available
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    # ssl_certificate /etc/ssl/certs/openpenpal.crt;
    # ssl_certificate_key /etc/ssl/private/openpenpal.key;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    # ssl_prefer_server_ciphers on;
    # ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 10m;

    # Rate limiting for general requests
    limit_req zone=general burst=200 nodelay;
    limit_conn addr 20;

    # Frontend application (main user interface)
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for development hot reload
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # API Gateway (centralized API routing)
    location /gateway/ {
        proxy_pass http://api_gateway/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;

        # CORS headers
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "$http_origin";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Backend API (legacy direct access)
    location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;

        # CORS headers
        add_header Access-Control-Allow-Origin "$http_origin" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "$http_origin";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Access-Control-Max-Age 86400;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Authentication endpoints with stricter rate limiting
    location ~ ^/api/(login|register|reset-password) {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Strict rate limiting for auth endpoints
        limit_req zone=login burst=5 nodelay;
    }

    # Static file uploads
    location /uploads/ {
        alias /var/www/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Security headers for static files
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        
        # File size and type restrictions
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(pdf|doc|docx|txt)$ {
            expires 1M;
            add_header Cache-Control "public";
        }
    }

    # Health check endpoint
    location /health {
        proxy_pass http://backend/health;
        access_log off;
        
        # Allow health checks without rate limiting
        limit_req off;
        limit_conn off;
    }

    # Favicon
    location = /favicon.ico {
        alias /var/www/static/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Robots.txt
    location = /robots.txt {
        alias /var/www/static/robots.txt;
        expires 1M;
        add_header Cache-Control "public";
        access_log off;
    }

    # Block common attack vectors
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Admin frontend server (Admin panel)
server {
    listen 80;
    listen [::]:80;
    server_name admin.localhost admin.openpenpal.local;

    # SSL/TLS configuration (ready for HTTPS)
    # Uncomment the following lines when SSL certificates are available
    # listen 443 ssl http2;
    # listen [::]:443 ssl http2;
    # ssl_certificate /etc/ssl/certs/admin.openpenpal.crt;
    # ssl_certificate_key /etc/ssl/private/admin.openpenpal.key;

    # Rate limiting for admin interface
    limit_req zone=admin burst=50 nodelay;
    limit_conn addr 10;

    # Admin frontend application
    location / {
        proxy_pass http://admin_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for development hot reload
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Additional security for admin interface
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
    }

    # Admin API endpoints
    location /admin/api/ {
        proxy_pass http://backend/admin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rate limiting for admin API
        limit_req zone=admin burst=20 nodelay;
    }

    # Admin authentication with strict limits
    location ~ ^/admin/api/(login|logout) {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Very strict rate limiting for admin auth
        limit_req zone=login burst=3 nodelay;
    }

    # Block all other access
    location ~ ^/(uploads|health|favicon|robots) {
        return 404;
    }
}

# Redirect HTTP to HTTPS (uncomment when SSL is enabled)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name openpenpal.local admin.openpenpal.local;
#     return 301 https://$server_name$request_uri;
# }

# Default server to handle undefined hosts
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 444;  # Close connection without response
}