version: '3.8'

# OpenPenPal 完整监控堆栈
# 包含 Prometheus + Grafana + Jaeger + Loki + AlertManager
networks:
  monitoring:
    driver: bridge
  openpenpal:
    external: true

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  jaeger_data:

services:
  # Prometheus - 指标收集
  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: openpenpal-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring
      - openpenpal
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Grafana - 可视化和仪表板
  grafana:
    image: grafana/grafana:10.0.0
    container_name: openpenpal-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - monitoring
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Jaeger - 分布式链路追踪
  jaeger:
    image: jaegertracing/all-in-one:1.46
    container_name: openpenpal-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # jaeger.thrift
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    volumes:
      - jaeger_data:/badger
    networks:
      - monitoring
      - openpenpal
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Loki - 日志聚合
  loki:
    image: grafana/loki:2.8.0
    container_name: openpenpal-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml:ro
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Promtail - 日志收集器
  promtail:
    image: grafana/promtail:2.8.0
    container_name: openpenpal-promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki

  # AlertManager - 告警管理
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: openpenpal-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - monitoring
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node Exporter - 系统指标
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: openpenpal-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # cAdvisor - 容器指标
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: openpenpal-cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - monitoring

  # Redis Exporter - Redis 监控
  redis-exporter:
    image: oliver006/redis_exporter:v1.51.0
    container_name: openpenpal-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
      - REDIS_EXPORTER_CHECK_KEYS=user:*,session:*
    networks:
      - monitoring
      - openpenpal
    depends_on:
      - redis

  # Postgres Exporter - PostgreSQL 监控
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.12.0
    container_name: openpenpal-postgres-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-openpenpal}?sslmode=disable
    networks:
      - monitoring
      - openpenpal
    depends_on:
      - postgres

  # ElasticSearch Exporter - 如果使用 ES
  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter:1.5.0
    container_name: openpenpal-elasticsearch-exporter
    restart: unless-stopped
    ports:
      - "9114:9114"
    environment:
      - ES_URI=http://elasticsearch:9200
    networks:
      - monitoring
    profiles:
      - elasticsearch

  # Nginx Exporter - Nginx 监控
  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:0.10.0
    container_name: openpenpal-nginx-exporter
    restart: unless-stopped
    ports:
      - "9113:9113"
    command:
      - -nginx.scrape-uri=http://nginx:8080/nginx_status
    networks:
      - monitoring
      - openpenpal
    profiles:
      - nginx

  # Blackbox Exporter - 端点监控
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: openpenpal-blackbox-exporter
    restart: unless-stopped
    ports:
      - "9115:9115"
    volumes:
      - ./monitoring/blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    networks:
      - monitoring
      - openpenpal

  # 模拟外部服务依赖
  redis:
    image: redis:7-alpine
    container_name: openpenpal-redis-monitoring
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - openpenpal
    profiles:
      - dependencies

  postgres:
    image: postgres:15-alpine
    container_name: openpenpal-postgres-monitoring
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-openpenpal}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    networks:
      - openpenpal
    profiles:
      - dependencies