version: '3.8'

services:
  write-service:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: openpenpal-write-service-dev
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/openpenpal
      - JWT_SECRET=development-jwt-secret-key
      - REDIS_URL=redis://redis:6379/0
      - WEBSOCKET_URL=ws://host.docker.internal:8080/ws
      - FRONTEND_URL=http://localhost:3000
      - ENVIRONMENT=development
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
      - /app/venv
      - /app/__pycache__
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]
    restart: unless-stopped
    networks:
      - openpenpal-dev

  db:
    image: postgres:15-alpine
    container_name: openpenpal-write-db-dev
    environment:
      - POSTGRES_DB=openpenpal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - openpenpal-dev

  redis:
    image: redis:7-alpine
    container_name: openpenpal-write-redis-dev
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    networks:
      - openpenpal-dev

  # 可选：数据库管理工具
  adminer:
    image: adminer
    container_name: openpenpal-write-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - openpenpal-dev

volumes:
  postgres_dev_data:
  redis_dev_data:

networks:
  openpenpal-dev:
    driver: bridge