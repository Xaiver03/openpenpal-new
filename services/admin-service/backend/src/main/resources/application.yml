server:
  port: 8003
  servlet:
    context-path: /api/admin

spring:
  application:
    name: admin-service
  
  datasource:
    # PostgreSQL生产配置 - 由DatabaseAutoConfiguration自动选择最佳连接
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:openpenpal}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update  # 更安全的选项，保留现有数据
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${FORMAT_SQL:false}
        jdbc:
          time_zone: UTC
  
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  security:
    jwt:
      secret: ${JWT_SECRET:}
      expiration: ${JWT_EXPIRATION:604800000}
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration

# Service URLs
services:
  write-service:
    url: ${WRITE_SERVICE_URL:http://localhost:8001}
  courier-service:
    url: ${COURIER_SERVICE_URL:http://localhost:8002}
  gateway:
    url: ${GATEWAY_URL:http://localhost:8080}

# Admin Configuration
admin:
  default-password: ${ADMIN_DEFAULT_PASSWORD:}
  max-login-attempts: 5
  session-timeout: 30m

# CORS Configuration
cors:
  allowed-origins: ${CORS_ORIGINS:http://localhost:3000,http://localhost:3001}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Logging
logging:
  level:
    com.openpenpal.admin: INFO
    org.springframework.security: ${SECURITY_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.springframework.web: ${WEB_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method

# Management
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS:health,info}
      base-path: /actuator
  endpoint:
    health:
      show-details: ${HEALTH_SHOW_DETAILS:when-authorized}
  security:
    enabled: true

# Security Configuration
security:
  password:
    min-length: 8
    max-length: 128
    require-complexity: true
    max-login-attempts: 5
    lockout-duration: 30m
  session:
    timeout: 30m
    max-concurrent: 1
  audit:
    enabled: true
    log-failed-attempts: true
  cors:
    restrict-origins: ${RESTRICT_CORS_ORIGINS:true}