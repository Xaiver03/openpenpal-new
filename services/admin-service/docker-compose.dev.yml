version: '3.8'

services:
  # PostgreSQL for Development
  postgres-dev:
    image: postgres:15-alpine
    container_name: openpenpal-postgres-dev
    environment:
      POSTGRES_DB: openpenpal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres-dev-data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - openpenpal-dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d openpenpal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for Development
  redis-dev:
    image: redis:7-alpine
    container_name: openpenpal-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis-dev-data:/data
    networks:
      - openpenpal-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # PgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: openpenpal-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@openpenpal.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres-dev
    networks:
      - openpenpal-dev
    restart: unless-stopped

  # Redis Commander for Redis Management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: openpenpal-redis-commander
    environment:
      REDIS_HOSTS: local:redis-dev:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis-dev
    networks:
      - openpenpal-dev
    restart: unless-stopped

volumes:
  postgres-dev-data:
    driver: local
  redis-dev-data:
    driver: local
  pgadmin-data:
    driver: local

networks:
  openpenpal-dev:
    driver: bridge