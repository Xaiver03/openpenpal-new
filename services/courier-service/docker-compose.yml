version: '3.8'

services:
  # 信使服务
  courier-service:
    build: .
    container_name: openpenpal-courier-service
    ports:
      - "8002:8002"
    environment:
      - PORT=8002
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/openpenpal?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-super-secret-jwt-key
      - ENVIRONMENT=production
      - WEBSOCKET_URL=ws://localhost:8080/ws
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - openpenpal-network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: openpenpal-postgres
    environment:
      - POSTGRES_DB=openpenpal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - openpenpal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d openpenpal"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: openpenpal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - openpenpal-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Redis Commander (可选 - 用于Redis管理)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: openpenpal-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - openpenpal-network
    profiles:
      - tools

networks:
  openpenpal-network:
    driver: bridge
    name: openpenpal-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local